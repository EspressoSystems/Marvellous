load("instance_generator.sage")

##########################################################
## rescue381 parameters
##########################################################
## use rescue381 to check the correctness of key_injection function

q381 = 52435875175126190479447740508185965837690552500527637822603658699938581184513
rescue381 = Rescue(128, q381, 4, 5)

##########################################################
## print parameters
##########################################################
import sys
def convert_bytes(input):
	res = []
	for v in input:
		res.append(int(v))

	res_str = "["

	for v in res:
		res_str +="0x%02X," % v

	res_str += "],"
	res_str = res_str.replace(",]", "]")

	return res_str
print("==========================\n")

for v in rescue381.constants_matrix:
    for e in v:
        print(convert_bytes(int.to_bytes(int(e), 32, 'little')))

print("==========================\n")
print("init vector")
for e in rescue381.initial_constant:
	print(convert_bytes(int.to_bytes(int(ZZ(e[0])), 32, 'little')))


def key_injection(init_vec, key_sched_matrix, key_sched_vec, q):
    key_injection = []
    k = (init_vec * key_sched_matrix + key_sched_vec) % q
    key_injection.append(k)
    for i in range(1, 24):
        k = (key_injection[i-1] * key_sched_matrix + key_sched_vec) % q
        key_injection.append(k)
    return key_injection


init_vec_381 = vector([ZZ(e[0]) for e in rescue381.initial_constant])
key_sched_vec_381 = vector([ZZ(e[0]) for e in rescue381.constants_constant])


key_sched_matrix_381 = matrix(ZZ, 4, 4)
for i in range(4):
	for j in range(4):
		key_sched_matrix_381[i,j] = ZZ(rescue381.constants_matrix[i][j])
key_sched_matrix_381 = key_sched_matrix_381.transpose()

key_injection_381 = key_injection(init_vec_381, key_sched_matrix_381, key_sched_vec_381, q381)

print("==========================\n")
print("key injection")
for e in key_injection_381:
    print("[")
    for f in e:
        print(convert_bytes(int.to_bytes(int(f), 32, 'little')))
    print("],")
print("==========================\n")

permutation_round_key = []
permutation_round_key.append(0x33259FDA9FC11E3E6D7FD9093683F94E8BD4B1A3E1142EBDB188C6C70821544D)
permutation_round_key.append(0x117D527B78EB13903CD14428279EADF910D9489EC35A1FA34DC24994BD95405A)
permutation_round_key.append(0x0E43E46AB1C0D4C4C121695BA20DA62A3C25E4F2D090EB011DC2BAD9EB614111)
permutation_round_key.append(0x01E95791AB2CD782EAA946E913CED2F0F37F96A2783965BF6382B5A0EDB81A49)
permutation_round_key.append(0x5540174CAC4E6D419E4512B2FBB6B66BD0A99E39A43464BBE2C3BF0A26C13015)
permutation_round_key.append(0x623BACA63A7A0A5E51A3AE8939A7D809178283CC4ACD23730A07D41BBBCC39FE)
permutation_round_key.append(0x1E7B18BA462494EE83FADC686A57C934F60B00DFBE93EF8B04D8B3077473BF85)
permutation_round_key.append(0x25AA205365E52FE1B6807FE466F51D3277F905B7D80A25CC352A8B3228332C63)
permutation_round_key.append(0x499DA7EDD9C2B00DE78F53293AF8D62F9916A402FE00D4E6C9ECC6CF725DA25F)
permutation_round_key.append(0x436E855CF08F744961017630BC5F90E285516927160435352EEC37F771AB695B)
permutation_round_key.append(0x3EB7F65E846CB424B34FDC3D7E2C814AFB92E38E77B732893380B7F076701B90)
permutation_round_key.append(0x160BD2FD76FD07C046B1D8BEF9C6447ED786A3B76A5E2C1881A4002816210D01)
permutation_round_key.append(0x54527105AC796A00507BE29298AAC743D9DC8668BD874A59F5FDFFEDEA3A87A3)
permutation_round_key.append(0x28E36BF255F11886FF64DD3087B989E90E6CFB911722927DA21A43ED4D154781)
permutation_round_key.append(0x57450381EF0249C8B057CC658ECBAC9184A4BA883195E4CE9E85A99251C65032)
permutation_round_key.append(0x6CF6963918CD6EC536E564F8F5CC5EB25B49B13AAD29505BBD900BC53FD66A49)
permutation_round_key.append(0x5311A134D3172DA679A2FB378E35D7636BF14D157AB89A32A61DFC5F999D9DA9)
permutation_round_key.append(0x3C0C0202B4A140E054CBC0B75B43A9555B0B0C4FF528ADFF79029D5F13911C49)
permutation_round_key.append(0x6F04A2E2BD343A1201F962B20315D5F769C18D96968466C657E0672EDB9C6072)
permutation_round_key.append(0x49627F57D0C518C52B93A5E1CC695E1EB34D1ECBD42174E78BB8A615D1148EE1)
permutation_round_key.append(0x6FC0A2DB8AA4B6B6A65FC25E102FBA0BEAF7B4D3B162ACE511C304E31CB7F160)
permutation_round_key.append(0x63B60BE1186314DE9B2826D6C024E31BE8738048B6735866F466EC121FF82826)
permutation_round_key.append(0x3EC168B51595186D413680FA811A1AAA64DAD58F979BC0DDC7E2C5741B9F91C8)
permutation_round_key.append(0x4E7F7ED8ED42E57F070423539FA88F711737AAB3642EC23371D5639FF9B333E3)
permutation_round_key.append(0x2457068FD385DDC52EFA12343B564B598FAC99A2B32B04A871B810FA16F73F54)
permutation_round_key.append(0x6D20E85BA7190CF3DC35C939EE8BB90B64CCDDDC5453C3FFBFF067A56DE0B42A)
permutation_round_key.append(0x127F48CB27A38D7F78F36ECE2DA84698EB368C7CA72A275117536E994155FA77)
permutation_round_key.append(0x47C3810A9A8A844C3A11A0B8AEB465AC2A92255D25157D4E664DACF70B8315AB)
permutation_round_key.append(0x31F6E5E442A6333DB6228E795CF3A05113659D04B89C2C265F1A1CDE411A7CA1)
permutation_round_key.append(0x23E1D1359D54FCFFA87715605E0027CB664723C9B3489C410B89EEC2EFCFF2FD)
permutation_round_key.append(0x26BAACE38190AF9C56FF2DC7E3FE9276D2C5581F95BAE19802222811F59B3897)
permutation_round_key.append(0x65953D07089D099184CBE68E3F4752CF60A5F58347FE79FEF96CA51062315D4D)
permutation_round_key.append(0x54850409A5C90AC150741B313B84639B38EF2EBDD15B6D33EA2C9602AD8BDF3D)
permutation_round_key.append(0x2A7F028AC72EDE8817A264F1FF88A08A7341F33BA084A6DC7F4758E39738D8B5)
permutation_round_key.append(0x4978A44EC03C4AE363D0DDFBE90B5AA80D8646865BA2E7B837477625A15B4316)
permutation_round_key.append(0x624AE56E3B758CE7C2EC5FBDAB3034D37E8829454DCBC7AE4F17FE67C1C5062A)
permutation_round_key.append(0x354698699ED7B7D76FE29F8D30E88F3DB7AF433B3A8B5B8F081D475EFF1D932E)
permutation_round_key.append(0x4BBC4FFE8D3AD3162D0EFAF684B43967459AFE1E59DAA40CC6EEB69A7F5EFEC3)
permutation_round_key.append(0x3BD36FF3D671BA61CEC78F14750D38F79E8DCBCE662316B301E1744D2CE93378)
permutation_round_key.append(0x2680E4184EC6483F2581151F2C294EBB814F7551DC9846AEF5FAB2049A8AE20E)
permutation_round_key.append(0x731931A21C681B804FCABAE0EC7E73E3C9F176FB0E79E659DD6328A0473034D2)
permutation_round_key.append(0x037C307BF092CA95F712C2909ECAC97E0D62E99C0AAF5A5A4E4DDE16712CCF4B)
permutation_round_key.append(0x123F31B43F15093DFE4526D922B0E0293FF3C2454CFC5903C235756F2AA39576)
permutation_round_key.append(0x21AB08B6035F2FDD75979F0A4816E6BFB01E5E3A467BF0607B98CE7F022A05D0)
permutation_round_key.append(0x55BEB26F6B52A265BD86E2BA55E55394B656A3763C8A3659AABB6B63CC99413C)
permutation_round_key.append(0x32AF1145D69D5B1CBBF0DE3494BB2B4E3A9E4C069C1214CB797BC9267BAAD47A)
permutation_round_key.append(0x561D59F10C470CBB0891895BEF3AFFCA46699DCADF7E33BF2A2EE10283EE3A7E)
permutation_round_key.append(0x199BAEB4A80F483BF3FCFDB9D7500EEAB72AE6A1EAD13219B6ED01023C940862)
permutation_round_key.append(0x0514A7C362DD68C31F12327151F4424BA1C64771D50EDE262C85BFB6C9B2F32E)
permutation_round_key.append(0x68E937B83A1AF14FE60FD1612CEB7BBCAABFA9BA0C931713D735D47B48E70AA4)
permutation_round_key.append(0x3576E0923547F582F050E63029CAB635F5F3EBECB2BD533763179EC0B6661147)
permutation_round_key.append(0x20EDA7D9E376651D673405D8F855B2D4B1FF5AC4197E9EC08906C16729611088)
permutation_round_key.append(0x40FF3820D930A1BF8BC3C4E380340C056A1C47FD3E9B2B204229A67E7BF137B0)
permutation_round_key.append(0x508B98A514CC2DAB64B1FA0DC78C5FA43E56705CDB2859682FBE96403FFA778F)
permutation_round_key.append(0x50AE0CB4A160F4B959153D99998DA92C04DDFE04A414FD93FD368F472DF6F7A6)
permutation_round_key.append(0x580D2B7ECCE6D82FA9FF3C1F5E4ADB2180F68969CF263625F58CC32B689488DA)
permutation_round_key.append(0x510E5471F69B9BF4C45CAE7BB2BC3939BC4A06B28AE833406B9190E1445D2513)
permutation_round_key.append(0x540D298F50B6FC9246699E049241489BE3A90E8404D1EDC1D4D4E390B7D090D5)
permutation_round_key.append(0x383B79035D204538A25A786971AA1BC6E01F41C3E66AC4191DD34E650356F37F)
permutation_round_key.append(0x49B4040E3CC3C57737FB01071B4656FADA72EEDE247174EF7DF53CC6C3EDA39F)
permutation_round_key.append(0x4FB8622B4874152EDAFCC15F5047F4337EE5D9C33D3F6BDB750BDEC69F69BBD9)
permutation_round_key.append(0x2101C96F215C5FBFDD69377517CF4A9AABC0734A9D17D22CBE5462E59730D8D8)
permutation_round_key.append(0x6656E758793272AA047646BE92CC5E6D098291AC4E3382327DA7A3B3789F6028)
permutation_round_key.append(0x1F3298337DDD533551EACC2C531406F600C3F3526E152C30C7EBCE8773266901)
permutation_round_key.append(0x33F952D4EC7515BE02CE0FCAA3DF2A9023999F090895910FD54A201AF377EE2F)
permutation_round_key.append(0x2451C3FF28061D05F60C8A7AC0E5987865EA82A45240675D23976EDC88D2AA5F)
permutation_round_key.append(0x58C79C6E1F1BDFF8D04B635709B334893A12AE51026B93B5C6013B00E38D6E89)
permutation_round_key.append(0x3A83B2D07FC247B5F037DDE05D1C3DB13C0739E1781D5C67E7DCEB69C511656D)
permutation_round_key.append(0x1C7EE92866E377549B754C261F59D79F2A3ED5B8FE37579079AC75117BE9C71D)
permutation_round_key.append(0x0EFFF9A80100157EA88B5275A9EC590905B72E2D61E977C93CFFC9BF262EFD66)
permutation_round_key.append(0x61E7D49F85242D083F1A1DAD392D3FD57AE4BFE741BD4AF6B137404EF3E7D428)
permutation_round_key.append(0x2FB4A97B0F10A82F4C2E8A7C226842311C8175358F13D827D3E20B846B702BC4)
permutation_round_key.append(0x55821FD071347D5555494AD56626A41C71408C6A22C069AFC5F1F0188E4C1AAF)
permutation_round_key.append(0x28F72D645ED4C81E693BA2247F0270B4FC2683407462E5BE7453FDDDB92C9DED)
permutation_round_key.append(0x57EE4952586C76399FFF7D3F863AC465103D9B02ADE695D82FEC6C9EFDCF6E18)
permutation_round_key.append(0x6B9B5596826415EB09DAEEAA67C07F9FE575560053C9A13E879BABB22DBEB92B)
permutation_round_key.append(0x399E6B58BA8ADAEB328CDE7EE31FE4669CFCEFF496C807AA75759EAFEC761AF5)
permutation_round_key.append(0x361D0127B5CB0B571974EFA4D181EC42C28DBA455DDB5F6FBB974F3099FE9822)
permutation_round_key.append(0x4F08FBD2C51143511BD1851102AA44596A1E76A02601FA120033884D7BD25306)
permutation_round_key.append(0x69ABF6961B9AF0CDFD94B052F032B3B897E5EC98FD516A650B8C3E6A089800BE)
permutation_round_key.append(0x58B87531930C605BE9DBAC4CF9898D580D99D6C738253C87B5FE73550C16F8DA)
permutation_round_key.append(0x32BF1270D52E617AB22C3CFDC330602CB1664A8D303571ABF56D01288C44AA11)
permutation_round_key.append(0x42115D035774E02267350FA36EFFFD9AD737BB8195C781D5B5779965E3680219)
permutation_round_key.append(0x2388ED0092C510AF7D17081DE5DBA5622FAFDAFDE34CDAA119F265CF21903F72)
permutation_round_key.append(0x3604FBEFD784C6EF0D3F0D411980E472607EE7EE8732C2AA78EECBDF8CC8CAD3)
permutation_round_key.append(0x64DCF1C35781CC5F8352632241D0DF9C40A0B4E0CA126483354B9BD5399C0DCB)
permutation_round_key.append(0x66E2ED129F2C0E5486EBDF10763A7818167879C7AA26FA90DAE24D849CD34B10)
permutation_round_key.append(0x61EB5AEB39F6F34A8FFBB14B18DAB547FAE50583E63BC745B4722B08A128FA81)
permutation_round_key.append(0x359D441547F0A5086DB047CDD0057E9CE956502FAD36F5BB78B8999ECC80DAC1)
permutation_round_key.append(0x384C4851ADC97E62A8719E2D2B51B8B47E46A747D3A41A120DDC9E2740392807)
permutation_round_key.append(0x6AD3924A2EA4BD220E3E81489175E6A49885D75CCF07CBEBC5523A30B1E308F7)
permutation_round_key.append(0x3C9D34DEE4328BFDB66A7D5305A860A677B7EE7C90CFD662338BED88F260D372)
permutation_round_key.append(0x0070C26163C975B26BC00EAFDB762F66A1182E851B3FE85174B5444C9959562C)
permutation_round_key.append(0x0BF57B072BAFFDA577E7BBA73ADA462FC1BC31A77E259FF20A01A21A8A98751F)
permutation_round_key.append(0x1DB3781C0DB9BCE943D79E33317757B6A8502F840BBF61DE31C39833A27DD2C4)
permutation_round_key.append(0x55CF2D772C2D72CAC8496B61D68D44AD32745B2FC6D815D50BB58F7210907492)
permutation_round_key.append(0x27E935C29D82645AF555399EE95E1ACEC870BD7485A1CDCE5959AEA91616269B)
permutation_round_key.append(0x0026B21B4AFA8D49300FC6F2B883DF706DB60808EBB72E308360BE148F05DE3C)
permutation_round_key.append(0x0662DBE7C27DB37C539C5EE6A0E04194EB259F15CCA409E73AE1DEC032208552)
permutation_round_key.append(0x47D0F37B080F43F4285CB3B02765A1B3A78601E5B4D3EB424D5B41ED61497F44)


print("permutation round key")
a = ZZ(0)
for i in range(len(permutation_round_key)/4):
	print("[")
	for j in range(4):
		print(convert_bytes(int.to_bytes(int(permutation_round_key[4*i+j]), 32, 'little')))
	print("],")
    # a = a + ZZ(1)
    # if a%4 == 0:
	# 	print("],\n[")

print("==========================\n")


print("mds")
for e in rescue381.MDS:
    print("[")
    for f in e:
        print(convert_bytes(int.to_bytes(int(f), 32, 'little')))
    print("],")
print("==========================\n")

print("v0")
v0 = rescue381.Sponge([0,0,0,0], 4)
for e in v0:
	print(convert_bytes(int.to_bytes(int(e), 32, 'little')))
